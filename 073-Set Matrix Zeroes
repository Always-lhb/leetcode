/*
题目大意：对给定矩阵，如果matrix[i][j]为0，则把矩阵的该行和该列全部置0
解题思路：把每行是否应置0存入该行第一列的元素中，把每列是否应置0存入该列第一行的元素中，这样，对于第一行和第一列都应存入matrix[0][0]，
         所以额外声明flag1,flag2分别存储第一行和第一列是否应置0。然后对除去第一行第一列的矩阵执行置零操作，最后根据标志位对第一行第一列分别置零。
注意的点：思路很好理解...
*/

class Solution {
public:
    void setZeroes(vector<vector<int>>& matrix) {
        int flag1 = -1, flag2 = -1;
        
        for(int j = 0; j < matrix[0].size(); j++){ // first row
            if(matrix[0][j] == 0){
                flag1 = 0;
                break;
            }
        }
        for(int i = 0; i < matrix.size(); i++){ // first col
            if(matrix[i][0] == 0){
                flag2 = 0;
                break;
            }
        }
        
        for(int i = 1; i < matrix.size(); i++){
            for(int j = 1; j < matrix[0].size(); j++){
                if(matrix[i][j] == 0){
                    matrix[i][0] = 0;
                    matrix[0][j] = 0;
                }
            }
        }
        
        for(int i = 1; i < matrix.size(); i++){
            if(matrix[i][0] == 0){
                for(int j = 1; j < matrix[0].size(); j++){
                    matrix[i][j] = 0;
                }
            }
        }
        for(int j = 1; j < matrix[0].size(); j++){
            if(matrix[0][j] == 0){
                for(int i = 1; i < matrix.size(); i++){
                    matrix[i][j] = 0;
                }
            }
        }
        
        if(flag1 == 0){
            for(int j = 0; j < matrix[0].size(); j++)
                matrix[0][j] = 0;
        }
        if(flag2 == 0){
            for(int i = 0; i < matrix.size(); i++)
                matrix[i][0] = 0;
        }
    }
};
