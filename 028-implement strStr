/*
题目大意：给定两个字符串haystack,needle，返回needle在haystack里的其实下标，如果没有则返回1
解题思路：
  直接用string.find()去做，竟然可以过...
  然后参照DISCUSS又自己实现了一次查找过程
*/

class Solution {
public:
    int strStr(string haystack, string needle) {
        int m = haystack.length(), n = needle.length();
        if (!n) return 0;
        for (int i = 0; i < m - n + 1; i++) {
            int j = 0;
            for (; j < n; j++)
                if (haystack[i + j] != needle[j])
                    break;
            if (j == n) return i;
        }
        return -1;
    }
};


class Solution {
public:
    int strStr(string haystack, string needle) {
        int index = haystack.find(needle);
        return index;
    }
};


/*
第二次做，超时，原因见注释
*/
class Solution {
public:
    int strStr(string haystack, string needle) {
        int m = haystack.size(), n = needle.size();
        
        if(n == 0) return 0;
        
        for(int i = 0; i < m - n + 1; i++){ //这里退出循环条件要注意，否则超时
            int j = i, k = 0;
            while(j < m && k < n && haystack[j] == needle[k]){
                j++;
                k++;
            }
            if(k == n) return i;
        }
        return -1;
    }
};
