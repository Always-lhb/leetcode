/*
题目大意： 
x=123, return 321
x=-123, return -321
溢出则返回0

解题思路：一开始想转换为string进行处理，但是编译提示reverse(s.begin(), s.end())不通过，所以采用直接求值法

tips:
1.注意溢出判断
2.声明为long类型防止溢出
*/


class Solution {
public:
    int reverse(int x) {
        long res = 0;
        while(x != 0){
            res = res * 10 + x % 10;
            x /= 10;
        }
        return (res > INT_MAX || res < INT_MIN) ? 0 : res;
    }
};


/*
简单题，第二次做神奇的出错了，原因在于应该声明res为long型。对于可能越界的题，注意声明为long
这里仍采用以上代码，简练。
*/


/********************** java **************************/

自己想复杂了，还对正负进行了区分，导致还得对Integer.MIN_VALUE特殊处理；实际上直接翻转即可，想到利用long存储res是个进步
/**
 * @author lihb
 */
public class Reverse {

    private static int reverse(int x) {
        long res = 0;
        while (x != 0) {
            res = res * 10 + x % 10;
            x /= 10;
        }
        return (res > Integer.MAX_VALUE || res < Integer.MIN_VALUE) ? 0 : (int) res;
    }

    public static void main(String[] args) {
        System.out.println(reverse(Integer.MAX_VALUE));
    }
}
