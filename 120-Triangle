/*
题目大意：对给定三角形，求从三角形顶部到底层的最短路径
解题思路：动态规划。
         dp[i][j]: triangle[i][j]到底部的最短路径，求解dp[0][0]
         初始化：底层dp[n-1][j]初始化为triangle[i][j]，从下往上求解即可。
注意的点：之前学习dp时所用的例子，哈哈哈，一次ac
*/

class Solution {
public:
    int minimumTotal(vector<vector<int>>& triangle) {
        int n = triangle.size();
        if(n == 0) return 0;
        
        vector<vector<int>> dp(n, vector<int>(n, 0));
        for(int j = 0; j <= n - 1; j++){
            dp[n-1][j] = triangle[n-1][j];
        }
        for(int i = n - 2; i >= 0; i--){
            for(int j = 0; j <= i; j++){
                dp[i][j] = min(dp[i+1][j], dp[i+1][j+1]) + triangle[i][j];
            }
        }
        return dp[0][0];
    }
};
