/*
题目大意：给定升序数组，数组在某个位置旋转，查询target是否存在，其中数组内元素可重复出现
解题思路：对比第33题，整体思路不变，即二分查找，如果mid命中则返回；否则，如果mid..high有序，如果target位于本区间更新low，否则更新high；
         如果low..mid有序，如果target位于本区间更新high,否则更新low；如果nums[mid]==nums[high]，这时由于有重复元素，无法断定哪一边有序，
         例如1,1,3,1和3,1,1两种情况，故此时只对high执行减一操作。
注意的点：与33题相结合，搞懂这类题型。
*/


class Solution {
public:
    bool search(vector<int>& nums, int target) {
        int low = 0, high = nums.size() - 1, mid;
        while(low <= high){
            mid = (low + high) / 2;
            if(nums[mid] == target) return true;
            else if(nums[mid] < nums[high]){ //mid..high sorted
                if(target > nums[mid] && target <= nums[high])
                    low = mid + 1;
                else
                    high = mid - 1;
            }
            else if(nums[mid] > nums[high]){ //low..mid sorted
                if(target < nums[mid] && target >= nums[low])
                    high = mid - 1;
                else
                    low = mid + 1;
            }
            else{ //nums[mid] == nums[high]
                high--;
            }
        }
        return false;
    }
};
