/*
题目大意：给定整形数组，某个数出现一次，其他数均出现两次，求这个数
解题思路：
        1.一开始想到利用unordered_map<int, int>来做，存放每个数字出现的次数，然后返回出现一次的数，但是用到额外空间
        2.相同数字异或为0，所以把所有数字异或，剩下的就是只出现一次的数！
注意的点：看来这是一个经典的老题，第一次做，记住思路
*/

class Solution {
public:
    int singleNumber(vector<int>& nums) {
        int res = 0;
        for(int n : nums) res ^= n;
        return res;
    }
};


class Solution {
public:
    int singleNumber(vector<int>& nums) {
        if(nums.size() < 2) return nums[0];
        
        int res;
        unordered_map<int, int> dict;
        for(int n : nums){
            if(dict.find(n) == dict.end())
                dict[n] = 1;
            else
                dict[n] = 2;
        }
        for(auto n : dict)
            if(n.second == 1)
                res = n.first;
        return res;
    }
};
